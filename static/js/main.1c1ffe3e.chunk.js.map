{"version":3,"sources":["components/ui/Card.js","components/expenseFilter/ExpenseFilter.js","components/expenses/ExpenseDate.js","components/expenses/ExpenseItems.js","components/expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/expenses/ExpenseChart.js","components/expenses/Expenses.js","components/addExpense/addExpenseForm.js","components/addExpense/newExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onYearChange","target","ExpenseDate","day","date","toLocaleString","month","year","getFullYear","ExpenseItems","title","amount","ExpenseList","array","length","map","expense","id","ChartBar","barHeight","maxValue","Math","round","style","height","label","Chart","dataValues","dataPoints","data","max","dataPoint","ExpenseChart","chartDatapoints","expenses","getMonth","Expenses","useState","changedYear","setChangedYear","filteredArray","filter","toString","AddExpenseForm","setChangedTitle","setChangedAmount","setChangedDate","titleValid","setTitleValid","amountValid","setAmountValid","dateValid","setDateValid","showForm","setDisplayFormFlag","onClick","onSubmit","preventDefault","trim","floor","random","Date","onDataSave","type","min","step","NewExpense","ChangedData","addNewExpense","DUMMY_EXPENSES","App","AddNewExpense","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c1ffe3e.chunk.js","sourcesContent":["function Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseFilter.css\";\n\nconst ExpenseFilter = (props) => {\n  const onSelectHandler = (event) => {\n    props.onYearChange(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={onSelectHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","import Card from \"../ui/Card\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const day = props.date.toLocaleString(\"en-US\", { day: \"numeric\" });\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <Card className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </Card>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../ui/Card\";\n\nfunction ExpenseItems(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">Rs.{props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItems;\n","import \"./ExpenseList.css\";\nimport ExpenseItems from \"./ExpenseItems\";\n\nconst ExpenseList = (props) => {\n  if (props.array.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.array.map((expense) => (\n        <ExpenseItems\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpenseList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barHeight }}></div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataValues = props.dataPoints.map((data) => data.value);\n  const maxValue = Math.max(...dataValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          label={dataPoint.label}\n          maxValue={maxValue}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  const chartDatapoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const month = expense.date.getMonth(); // starts with 0 ie Jan\n    chartDatapoints[month].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDatapoints} />;\n};\n\nexport default ExpenseChart;\n","import Card from \"../ui/Card\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"../expenseFilter/ExpenseFilter\";\nimport { useState } from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpenseChart from \"./ExpenseChart\";\n\nfunction Expenses(props) {\n  const [changedYear, setChangedYear] = useState(\"2021\");\n\n  const yearChangeHandler = (year) => {\n    setChangedYear(year);\n  };\n\n  const filteredArray = props.expense.filter((expense) => {\n    return expense.date.getFullYear().toString() === changedYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter selected={changedYear} onYearChange={yearChangeHandler} />\n      <ExpenseChart expenses={filteredArray} />\n      <ExpenseList array={filteredArray} />\n    </Card>\n  );\n}\n\nexport default Expenses;\n","import { useState } from \"react\";\nimport \"./addExpenseForm.css\";\n\nconst AddExpenseForm = (props) => {\n  const [title, setChangedTitle] = useState(\"\");\n  const [amount, setChangedAmount] = useState(\"\");\n  const [date, setChangedDate] = useState(\"\");\n  const [titleValid, setTitleValid] = useState(true);\n  const [amountValid, setAmountValid] = useState(true);\n  const [dateValid, setDateValid] = useState(true);\n\n  const [showForm, setDisplayFormFlag] = useState(false);\n\n  const titleChangedHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setTitleValid(true);\n    }\n    setChangedTitle(event.target.value);\n  };\n\n  const amountChangedHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setAmountValid(true);\n    }\n    setChangedAmount(event.target.value);\n  };\n\n  const dateChangedHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setDateValid(true);\n    }\n    setChangedDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (title.trim().length === 0) {\n      setTitleValid(false);\n      return;\n    }\n    if (amount.trim().length === 0) {\n      setAmountValid(false);\n      return;\n    }\n    if (date.trim().length === 0) {\n      setDateValid(false);\n      return;\n    }\n    const data = {\n      id: Math.floor(Math.random() * 10000000000000000 + 1),\n      title: title,\n      amount: +amount,\n      date: new Date(date),\n    };\n\n    props.onDataSave(data);\n    setChangedTitle(\"\");\n    setChangedAmount(\"\");\n    setChangedDate(\"\");\n    setDisplayFormFlag(false);\n  };\n\n  const displayForm = () => {\n    setDisplayFormFlag(true);\n  };\n\n  const hideForm = () => {\n    setDisplayFormFlag(false);\n  };\n\n  if (showForm === false) {\n    return (\n      <div>\n        <button onClick={displayForm}>Add New Expense</button>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className={`new-expense__control ${!titleValid ? \"invalid\" : \"\"}`}>\n          <label>Title</label>\n          <input type=\"text\" value={title} onChange={titleChangedHandler} />\n        </div>\n        <div\n          className={`new-expense__control ${!amountValid ? \"invalid\" : \"\"}`}\n        >\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={amount}\n            onChange={amountChangedHandler}\n          />\n        </div>\n        <div className={`new-expense__control ${!dateValid ? \"invalid\" : \"\"}`}>\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={date}\n            onChange={dateChangedHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={hideForm}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddExpenseForm;\n","import \"./newExpense.css\";\nimport AddExpenseForm from \"./addExpenseForm\";\n\nconst NewExpense = (props) => {\n  const ChangedDataHandler = (data) => {\n    const ChangedData = {\n      ...data,\n    };\n\n    props.addNewExpense(ChangedData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <AddExpenseForm onDataSave={ChangedDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import \"./App.css\";\nimport Expenses from \"./components/expenses/Expenses\";\nimport NewExpense from \"./components/addExpense/newExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: Math.floor(Math.random() * 10000000000000000 + 1),\n    title: \"Car insurance\",\n    amount: 1500,\n    date: new Date(),\n  },\n  {\n    id: Math.floor(Math.random() * 10000000000000000 + 1),\n    title: \"Books\",\n    amount: 1000,\n    date: new Date(),\n  },\n  {\n    id: Math.floor(Math.random() * 10000000000000000 + 1),\n    title: \"Bike Servicing\",\n    amount: 900,\n    date: new Date(),\n  },\n  {\n    id: Math.floor(Math.random() * 10000000000000000 + 1),\n    title: \"New Keyboard\",\n    amount: 1100,\n    date: new Date(),\n  },\n];\n\nfunction App() {\n  const [expense, AddNewExpense] = useState(DUMMY_EXPENSES);\n\n  const NewExpenseHandler = (expense) => {\n    AddNewExpense((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div className=\"App-header\">\n      <NewExpense addNewExpense={NewExpenseHandler} />\n      <Expenses expense={expense} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}